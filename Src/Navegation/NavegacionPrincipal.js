import { createStackNavigator } from "@react-navigation/stack";
import { createBottomTabNavigator } from "@react-navigation/bottom-tabs";
import { AntDesign, Ionicons } from "@expo/vector-icons"; // Aseg칰rate de tener @expo/vector-icons instalado

// Importaciones de tus Stacks de Navegaci칩n principales
// Aseg칰rate de que las rutas sean correctas.
// Si InicioScreen es una pantalla y no un Stack, aseg칰rate de que su path sea correcto
import InicioScreen from "./Stacks/Inicio"; // O './Stacks/InicioStack' si es un Stack
import PerfilStack from "./Stacks/PerfilStack";
import ConfiguracionStack from "./Stacks/ConfiguracionStack";
import EspecialidadesStack from "./Stacks/EspecialidadesStack";
import MedicosStack from "./Stacks/MedicosStack";
import ConsultoriosStack from "./Stacks/ConsultoriosStack";
import PacientesStack from "./Stacks/PacientesStack";
import CitasMedicasStack from "./Stacks/CitasMedicasStack";

// 춰IMPORTANTE! No importamos LoginScreen ni RegistroScreen aqu칤.
// Ellos son manejados por AuthNavegacion.js

const Stack = createStackNavigator();
const Tab = createBottomTabNavigator();

// 游녤 Componente de Pesta침as Inferiores (Bottom Tabs)
// Este componente agrupa las pantallas que se acceden directamente desde las pesta침as.
function Tabs() {
  return (
    <Tab.Navigator
      screenOptions={({ route }) => ({
        tabBarActiveTintColor: "#1976D2",
        tabBarInactiveTintColor: "#757575",
        // Aqu칤 es donde decides si el Tab Navigator tiene su propio encabezado o no.
        // Generalmente, si usas Stacks dentro de Tabs, quieres que el Stack interno maneje el header.
        headerShown: true, // <-- Oculta el encabezado por defecto en las pantallas de las pesta침as
                               // Esto permite que cada Stack dentro de la pesta침a maneje su propio header

        // Si quisieras un header com칰n para todas las pesta침as:
        // headerStyle: {
        //   backgroundColor: "#2a86ff",
        // },
        // headerTintColor: "#fff",
        // headerTitleStyle: {
        //   fontWeight: "bold",
        // },
        // headerTitle: getHeaderTitle(route), // Necesitar칤as importar getFocusedRouteNameFromState
      })}
    >
      <Tab.Screen
        name="InicioTab" // Un nombre 칰nico para la pesta침a de Inicio
        component={InicioScreen} // Asumo que "InicioScreen" es una pantalla. Si es un Stack, c치mbialo.
        options={{
          title: "Inicio", // T칤tulo que se muestra en la pesta침a
          tabBarIcon: ({ color, size }) => (
            <Ionicons name="home" size={size} color={color} />
          ),
          // Si InicioScreen necesita un header, def칤nelo en el propio componente o en un Stack.
          // Por ejemplo:
          // headerShown: true, // Si quieres que solo esta pesta침a tenga header
          // headerTitle: "Bienvenido",
        }}
      />

      <Tab.Screen
        name="PerfilTab" // Un nombre 칰nico para la pesta침a de Perfil
        component={PerfilStack} // Renderiza todo el Stack de Perfil
        options={{
          title: "Perfil", // T칤tulo que se muestra en la pesta침a
          tabBarIcon: ({ color, size }) => (
            <AntDesign name="user" size={size} color={color} />
          ),
          // El header lo manejar치 PerfilStack internamente (si PerfilStack lo define)
        }}
      />

      <Tab.Screen
        name="ConfiguracionTab" // Un nombre 칰nico para la pesta침a de Configuraci칩n
        component={ConfiguracionStack} // Renderiza todo el Stack de Configuraci칩n
        options={{
          title: "Configuraci칩n", // T칤tulo que se muestra en la pesta침a
          tabBarIcon: ({ color, size }) => (
            <Ionicons name="settings" size={size} color={color} />
          ),
          // El header lo manejar치 ConfiguracionStack internamente
        }}
      />

      {/*
        춰Eliminamos la pantalla de Login de las Tabs!
        El usuario ya est치 autenticado para acceder a NavegacionPrincipal.
      */}
      {/* <Tab.Screen
        name="Login"
        component={LoginScreen}
        options={{
          tabBarIcon: ({ color, size }) => (
            <Ionicons name="log-in" size={size} color={color} />
          ),
        }}
      /> */}
    </Tab.Navigator>
  );
}

// 游녤 Navegador Principal: incluye Tabs + otras pantallas fuera de las pesta침as
// Estas son pantallas a las que se puede navegar desde cualquier parte de las Tabs
// Por ejemplo, una pantalla de detalles de un m칠dico que se abre desde una lista.
export default function NavegacionPrincipal() {
  return (
    <Stack.Navigator screenOptions={{ headerShown: false }}>
      {/*
        La primera pantalla de este Stack siempre ser치 el navegador de pesta침as.
        Una vez que el usuario est치 logueado, ve las Tabs.
      */}
      <Stack.Screen name="MainTabs" component={Tabs} />

      {/*
        Estas son pantallas/stacks a las que se navega desde las pantallas
        dentro de las pesta침as. Por ejemplo, desde la pesta침a "Inicio"
        podr칤as tener una lista de m칠dicos y al tocar uno, navegar칤as a la pantalla
        de detalles del m칠dico, que podr칤a estar definida dentro de MedicosStack.
        Aseg칰rate de que cada uno de estos es un componente Stack Navigator.
      */}
      <Stack.Screen name="Especialidades" component={EspecialidadesStack} />
      <Stack.Screen name="Medicos" component={MedicosStack} />
      <Stack.Screen name="Consultorios" component={ConsultoriosStack} />
      <Stack.Screen name="Pacientes" component={PacientesStack} />
      <Stack.Screen name="CitasMedicas" component={CitasMedicasStack} />

      {/*
        춰Eliminamos LoginScreen y RegistroScreen de aqu칤 tambi칠n!
        Estas pantallas pertenecen exclusivamente a AuthNavegacion.
      */}
      {/* <Stack.Screen name="Registro" component={RegistroScreen} /> */}
      {/* <Stack.Screen name="Login" component={LoginScreen} /> */}
    </Stack.Navigator>
  );
}

// Opcional: Funci칩n auxiliar si quieres un t칤tulo de header din치mico en las pesta침as
// Necesitar칤as importar getFocusedRouteNameFromState desde '@react-navigation/native'
// import { getFocusedRouteNameFromState } from '@react-navigation/native';
// const getHeaderTitle = (route) => {
//     const routeName = getFocusedRouteNameFromState(route.state) ?? 'InicioTab';
//     switch (routeName) {
//       case 'InicioTab':
//         return 'Inicio';
//       case 'PerfilTab':
//         return 'Mi Perfil';
//       case 'ConfiguracionTab':
//         return 'Configuraci칩n de la App';
//       default:
//         return 'App';
//     }
// };